diff --git a/src/next/pathUtilities/url.ts b/src/next/pathUtilities/url.ts
index afbf0f43d1858fd8e2fffdbcf175c49c721b5502..d81f4cdd980c328fa8571101d92773198a4fc654 100644
--- a/src/next/pathUtilities/url.ts
+++ b/src/next/pathUtilities/url.ts
@@ -29,6 +29,8 @@ const tabRegEx = /\t/g;
 const questionRegex = /\?/g;
 const hashRegex = /#/g;
 const spaceRegEx = / /g;
+const leftBraceRegEx = /\[/g;
+const rightBraceRegEx = /\]/g;
 
 function encodePathChars(filepath: string) {
   if (filepath.indexOf('%') !== -1) filepath = filepath.replace(percentRegEx, '%25');
@@ -38,6 +40,12 @@ function encodePathChars(filepath: string) {
   if (filepath.indexOf('\r') !== -1) filepath = filepath.replace(carriageReturnRegEx, '%0D');
   if (filepath.indexOf('\t') !== -1) filepath = filepath.replace(tabRegEx, '%09');
   if (filepath.indexOf(' ') !== -1) filepath = filepath.replace(spaceRegEx, '%20');
+
+  // Note: Pre-encoding these characters won't work as they'll be unencoded when
+  // `fileURLToPath()` runs against the URI in `PathUtilities.join()`.
+  if (filepath.indexOf('[') !== -1) filepath = filepath.replace(leftBraceRegEx, '%5B');
+  if (filepath.indexOf(']') !== -1) filepath = filepath.replace(rightBraceRegEx, '%5D');
+
   return filepath;
 }
 
